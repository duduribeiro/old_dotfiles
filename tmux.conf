CLOCK=⌚
CALENDAR=

unbind C-b
set -g prefix C-s

set-option -g default-terminal "screen-256color"
set -g base-index 1
set-option -g renumber-windows on

# ----------------------
# Status Bar
# -----------------------
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

set -g status-right-length 200
set -g status-right  '#[fg=colour236,bg=colour234]#[fg=brightcyan,bg=colour236] #(tmux-spotify-info) #(battery -t) #[fg=colour236,bg=${date_colour:-default},nobold,noitalics,nounderscore]#[fg=colour247,bg=colour236,nobold,noitalics,nounderscore] ☼ #(date +"%D") #[fg=colour241,bg=colour236,nobold,noitalics,nounderscore]#[fg=colour252,bg=colour236,bold,noitalics,nounderscore] ⌚ #(date +"%H:%M")   '

bind a send-prefix
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# resize

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 6

# move window
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind c new-window -c '#{pane_current_path}'

bind-key b break-pane -d # -d detached (will keep the focus on the current window)

#bind-key C-j choose-tree

# Use vim keybinding in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-usernamespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Smart pane switching with awareness of vim splits
# See this blog post:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Open htop with prefix + h
bind-key h split-window -h "htop"
bind-key T split-window -h -c ~/ "vim todo.md"

# change session with ff
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# join pane
bind-key j command-prompt -p "Join pane from: " "join-pane -h -s '%%'"

